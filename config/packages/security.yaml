security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: 'auto' # Symfony will pick the best hash algorithm available


    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            entry_point: 'App\Security\CustomerAuthAuthenticator' 
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login
            logout:
                path: logout
                target: home
            custom_authenticator: App\Security\CustomerAuthAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/accountant, roles: ROLE_ACCOUNTANT }
    role_hierarchy:
        ROLE_ADMIN: [ROLE_ACCOUNTANT, ROLE_CUSTOMER]



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
